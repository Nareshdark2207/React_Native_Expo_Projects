{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Slider1, Slider2, Slider3, Slider4 } from \"../CarouselImages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Carousel = function Carousel() {\n  var colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n  var delay = 2500;\n  function Slideshow() {\n    var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n    var timeoutRef = React.useRef(null);\n    function resetTimeout() {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    }\n    React.useEffect(function () {\n      resetTimeout();\n      timeoutRef.current = setTimeout(function () {\n        return setIndex(function (prevIndex) {\n          return prevIndex === colors.length - 1 ? 0 : prevIndex + 1;\n        });\n      }, delay);\n      return function () {\n        resetTimeout();\n      };\n    }, [index]);\n    return _jsxs(\"div\", {\n      className: \"slideshow\",\n      children: [_jsx(\"div\", {\n        className: \"slideshowSlider\",\n        style: {\n          transform: `translate3d(${-index * 100}%, 0, 0)`\n        },\n        children: colors.map(function (backgroundColor, index) {\n          return _jsx(\"div\", {\n            className: \"slide\",\n            style: {\n              backgroundColor: backgroundColor\n            }\n          }, index);\n        })\n      }), _jsx(\"div\", {\n        className: \"slideshowDots\",\n        children: colors.map(function (_, idx) {\n          return _jsx(\"div\", {\n            className: `slideshowDot${index === idx ? \" active\" : \"\"}`,\n            onClick: function onClick() {\n              setIndex(idx);\n            }\n          }, idx);\n        })\n      })]\n    });\n  }\n  ReactDOM.render(_jsx(Slideshow, {}), document.getElementById(\"App\"));\n};\nexport default Carousel;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useRef","useState","Slider1","Slider2","Slider3","Slider4","jsx","_jsx","jsxs","_jsxs","Carousel","colors","delay","Slideshow","_React$useState","_React$useState2","_slicedToArray","index","setIndex","timeoutRef","resetTimeout","current","clearTimeout","setTimeout","prevIndex","length","className","children","style","transform","map","backgroundColor","_","idx","onClick","ReactDOM","render","document","getElementById","styles","StyleSheet","create"],"sources":["C:/Users/Naresh/Desktop/React-native/Loginpage-ReactNative/src/components/Carousel.js"],"sourcesContent":["import { StyleSheet, Text, View, FlatList, Image, Dimensions } from \"react-native\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {Slider1, Slider2, Slider3, Slider4} from \"../CarouselImages\";\r\n// import { Immersive } from 'react-native-immersive';\r\n\r\nconst Carousel = () => {\r\n    // Immersive.on()\r\n    // Immersive.setImmersive(true)\r\n    // const flatListRef = useRef();\r\n    // const navigationRef = useRef(null);\r\n    // const myRef = useRef(null);  \r\n    // const screenWidth = Dimensions.get(\"window\").width;\r\n    // const [activeIndex, setActiveIndex] = useState(0);\r\n    // const [currentIndex, setCurrentIndex] = useState(0);\r\n    // console.log(\"data\",activeIndex);\r\n    // useEffect(() => {\r\n    //     let interval = setInterval(()=>{\r\n    //         if(activeIndex === carouselData.length - 1) {\r\n    //             flatListRef.current.scrollToIndex({\r\n    //                 index: 0,\r\n    //                 animation: true,\r\n    //             });\r\n    //         } else {\r\n    //             flatListRef.current.scrollToIndex({\r\n    //                 index: setActiveIndex( activeIndex + 1),\r\n    //                 animation: true,\r\n    //             });\r\n    //         }\r\n    //     }, 3000);\r\n    //     return () => clearInterval(interval);\r\n    // },[]);\r\n    // useEffect(() => {\r\n    //     myRef.current.scrollToIndex({\r\n    //     animated: true,\r\n    //     index: currentIndex ,\r\n    //     });\r\n    // }, [currentIndex]);\r\n\r\n    // useEffect(()=> {\r\n    //     const timer = setTimeout(()=> {\r\n    //     const nextIndex = currentIndex === carouselData.length - 1\r\n    //         ? 0\r\n    //         : currentIndex + 1;\r\n    //     setCurrentIndex(nextIndex);\r\n    //     }, 1000);\r\n    //     return () => clearTimeout(timer);\r\n    // });\r\n\r\n\r\n    // const getItemLayout = (data, index) =>({\r\n    //     length: screenWidth,\r\n    //     offset: screenWidth * index,\r\n    //     index: index,\r\n    // }, [currentIndex]);\r\n\r\n    // const carouselData = [\r\n    //     {\r\n    //         id: \"01\",\r\n    //         imageUrl: Slider1,\r\n    //     },\r\n    //     {\r\n    //         id: \"02\",\r\n    //         imageUrl: Slider2,\r\n    //     },\r\n    //     {\r\n    //         id: \"03\",\r\n    //         imageUrl: Slider3,\r\n    //     },  \r\n    //     {\r\n    //         id: \"04\",\r\n    //         imageUrl: Slider4,\r\n    //     },\r\n    // ];\r\n\r\n    // const renderItem = ({ item, data }) => {\r\n    //     return(\r\n    //         <View>\r\n    //             <Image source={item.imageUrl} style={{ height:200, width: screenWidth }}></Image>\r\n    //         </View>\r\n    //     );\r\n    // };\r\n\r\n    // const handleScroll = (event) =>{\r\n    //     const scrollPosition = event.nativeEvent.contentOffset.x;\r\n    //     const index = scrollPosition / screenWidth;\r\n    //     setActiveIndex(index);\r\n    // }\r\n    // return (\r\n    //     <View>\r\n    //         <FlatList data={carouselData} \r\n    //             renderItem={renderItem}\r\n    //             ref={flatListRef}\r\n    //             getItemLayout={getItemLayout}\r\n    //             keyExtractor={(item)=>item.id} \r\n    //             snapToAlignment=\"center\"\r\n    //             decelerationRate={\"fast\"}\r\n    //             showsHorizontalScrollIndicator={false}\r\n    //             horizontal={true}\r\n    //             scrollEnabled={true} \r\n    //             pagingEnabled={true}\r\n    //             useScrollView={true}\r\n    //             onScroll={handleScroll}>\r\n    //         </FlatList>\r\n    //     </View>\r\n    // )\r\n    const colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\r\nconst delay = 2500;\r\n\r\nfunction Slideshow() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const timeoutRef = React.useRef(null);\r\n\r\n  function resetTimeout() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    resetTimeout();\r\n    timeoutRef.current = setTimeout(\r\n      () =>\r\n        setIndex((prevIndex) =>\r\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\r\n        ),\r\n      delay\r\n    );\r\n\r\n    return () => {\r\n      resetTimeout();\r\n    };\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"slideshow\">\r\n      <div\r\n        className=\"slideshowSlider\"\r\n        style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n      >\r\n        {colors.map((backgroundColor, index) => (\r\n          <div\r\n            className=\"slide\"\r\n            key={index}\r\n            style={{ backgroundColor }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"slideshowDots\">\r\n        {colors.map((_, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n            onClick={() => {\r\n              setIndex(idx);\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Slideshow />, document.getElementById(\"App\"));\r\n}\r\n\r\nexport default Carousel;\r\n\r\nconst styles = StyleSheet.create({});"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAAQC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAoGnB,IAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EACpD,IAAMC,KAAK,GAAG,IAAI;EAElB,SAASC,SAASA,CAAA,EAAG;IACnB,IAAAC,eAAA,GAA0BhB,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;MAAAc,gBAAA,GAAAC,cAAA,CAAAF,eAAA;MAApCG,KAAK,GAAAF,gBAAA;MAAEG,QAAQ,GAAAH,gBAAA;IACtB,IAAMI,UAAU,GAAGrB,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC;IAErC,SAASoB,YAAYA,CAAA,EAAG;MACtB,IAAID,UAAU,CAACE,OAAO,EAAE;QACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC;MAClC;IACF;IAEAvB,KAAK,CAACC,SAAS,CAAC,YAAM;MACpBqB,YAAY,CAAC,CAAC;MACdD,UAAU,CAACE,OAAO,GAAGE,UAAU,CAC7B;QAAA,OACEL,QAAQ,CAAC,UAACM,SAAS;UAAA,OACjBA,SAAS,KAAKb,MAAM,CAACc,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC;QAAA,CACrD,CAAC;MAAA,GACHZ,KACF,CAAC;MAED,OAAO,YAAM;QACXQ,YAAY,CAAC,CAAC;MAChB,CAAC;IACH,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;IAEX,OACER,KAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,GACxBpB,IAAA;QACEmB,SAAS,EAAC,iBAAiB;QAC3BE,KAAK,EAAE;UAAEC,SAAS,EAAG,eAAc,CAACZ,KAAK,GAAG,GAAI;QAAU,CAAE;QAAAU,QAAA,EAE3DhB,MAAM,CAACmB,GAAG,CAAC,UAACC,eAAe,EAAEd,KAAK;UAAA,OACjCV,IAAA;YACEmB,SAAS,EAAC,OAAO;YAEjBE,KAAK,EAAE;cAAEG,eAAe,EAAfA;YAAgB;UAAE,GADtBd,KAED,CAAC;QAAA,CACR;MAAC,CACC,CAAC,EAENV,IAAA;QAAKmB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BhB,MAAM,CAACmB,GAAG,CAAC,UAACE,CAAC,EAAEC,GAAG;UAAA,OACjB1B,IAAA;YAEEmB,SAAS,EAAG,eAAcT,KAAK,KAAKgB,GAAG,GAAG,SAAS,GAAG,EAAG,EAAE;YAC3DC,OAAO,EAAE,SAAAA,QAAA,EAAM;cACbhB,QAAQ,CAACe,GAAG,CAAC;YACf;UAAE,GAJGA,GAKD,CAAC;QAAA,CACR;MAAC,CACC,CAAC;IAAA,CACH,CAAC;EAEV;EAEAE,QAAQ,CAACC,MAAM,CAAC7B,IAAA,CAACM,SAAS,IAAE,CAAC,EAAEwB,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC9D,CAAC;AAED,eAAe5B,QAAQ;AAEvB,IAAM6B,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}